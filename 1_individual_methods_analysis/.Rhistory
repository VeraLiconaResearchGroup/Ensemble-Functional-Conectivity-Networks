methods<-c("BCohF","BCorrU","BF_PFmean","PCohF","T_BCmean","T_BF_BCmean","T_BF_PF_BCmean","T_BF_PFmean","T_BFmean","T_PF_BCmean","T_PFmean","Tigress")
#onlyAUC
pattern<-"Combined_data_sums_onlyAUC.csv"
d1<-create_rowsum_lineplot(pattern)
create_rowsum_lineplot<-function(pattern,methods){
count_files <- list.files(recursive=T,pattern=paste0("^",pattern),full.names=TRUE)
d1<-data.frame()
for (i in count_files) {
f <- read.csv(i,row.names = 1) %>% filter(Method_name %in% methods)
f<- cbind(f,c(rep(unlist(strsplit(i,'/'))[2],nrow(f))))
colnames(f)[3]<-c('time_series')
#if the counts object is empty just copy the f to m
if(length(d1) == 0){
d1 <- f
} else
{
#if the dataframe is not empty then merge the data
d1 <- rbind(d1,f)
}
}
d1$time_series<-gsub("sim","",d1$time_series)
d1$time_series<-str_pad(d1$time_series, 2, pad = "0")
colnames(d1)<-c("Method","Row Sum","Network")
d1$`Row Sum`<-d1$`Row Sum`/50
return(d1)
}
pal<-c("#8dd3c7","#bebada","#fb8072","#80b1d3","#fdb462","#ffed6f","#b3de69","#d9d9d9","#ffffb3","#bc80bd","#ccebc5","#fccde5")
methods<-c("BCohF","BCorrU","BF_PFmean","PCohF","T_BCmean","T_BF_BCmean","T_BF_PF_BCmean","T_BF_PFmean","T_BFmean","T_PF_BCmean","T_PFmean","Tigress")
#onlyAUC
pattern<-"Combined_data_sums_onlyAUC.csv"
d1<-create_rowsum_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=1</sub>, Weight<sub>ACC=0</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_RowSums_AUConly.pdf")
#onlyACC
pattern<-"Combined_data_sums_onlyACC.csv"
d1<-create_rowsum_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0</sub>, Weight<sub>ACC=1</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_RowSums_ACConly.pdf")
#equal weights
pattern<-"Combined_data_sums_equal.csv"
d1<-create_rowsum_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0.5</sub>, Weight<sub>ACC=0.5</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_RowSums_equal.pdf")
#AUC=0.3, ACC=0.7 weights
pattern<-"Combined_data_sums_37.csv"
d1<-create_rowsum_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0.3</sub>, Weight<sub>ACC=0.7</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_RowSums_37.pdf")
#AUC=0.7, ACC=0.3 weights
pattern<-"Combined_data_sums_73.csv"
d1<-create_rowsum_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0.7</sub>, Weight<sub>ACC=0.3</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_RowSums_73.pdf")
create_median_lineplot<-function(pattern,methods){
count_files <- list.files(recursive=T,pattern=paste0("^",pattern),full.names=TRUE)
d1<-data.frame()
for (i in count_files) {
f <- read.csv(i,row.names = 1) %>% filter(Method_name %in% methods)
f<- cbind(f,c(rep(unlist(strsplit(i,'/'))[2],nrow(f))))
colnames(f)[3]<-c('time_series')
#if the counts object is empty just copy the f to m
if(length(d1) == 0){
d1 <- f
} else
{
#if the dataframe is not empty then merge the data
d1 <- rbind(d1,f)
}
}
d1$time_series<-gsub("sim","",d1$time_series)
d1$time_series<-str_pad(d1$time_series, 2, pad = "0")
colnames(d1)<-c("Method","Median","Network")
return(d1)
}
#onlyAUC
pattern<-"Combined_data_median_onlyAUC.csv"
d1<-create_median_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=1</sub>, Weight<sub>ACC=0</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_Median_AUConly.pdf")
#onlyACC
pattern<-"Combined_data_median_onlyACC.csv"
d1<-create_median_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0</sub>, Weight<sub>ACC=1</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_Median_ACConly.pdf")
#equal weights
pattern<-"Combined_data_median_equal.csv"
d1<-create_median_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0.5</sub>, Weight<sub>ACC=0.5</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_Median_equal.pdf")
#AUC=0.3, ACC=0.7 weights
pattern<-"Combined_data_sums_37.csv"
d1<-create_median_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0.3</sub>, Weight<sub>ACC=0.7</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_Median_37.pdf")
#AUC=0.7, ACC=0.3 weights
pattern<-"Combined_data_sums_73.csv"
d1<-create_median_lineplot(pattern,methods)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0.7</sub>, Weight<sub>ACC=0.3</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
p1<-ggplotly(p)
export(p1, file = "lineplot_Median_73.pdf")
create_rowsum_lineplot<-function(pattern){
count_files <- list.files(recursive=T,pattern=paste0("^",pattern),full.names=TRUE)
d1<-data.frame()
for (i in count_files) {
f <- read.csv(i,row.names = 1)
f<- cbind(f,c(rep(unlist(strsplit(i,'/'))[2],nrow(f))))
colnames(f)[3]<-c('time_series')
#if the counts object is empty just copy the f to m
if(length(d1) == 0){
d1 <- f
} else
{
#if the dataframe is not empty then merge the data
d1 <- rbind(d1,f)
}
}
d1$time_series<-gsub("sim","",d1$time_series)
d1$time_series<-str_pad(d1$time_series, 2, pad = "0")
colnames(d1)<-c("Method","Row Sum","Network")
d1$`Row Sum`<-d1$`Row Sum`/50
return(d1)
}
create_median_lineplot<-function(pattern){
count_files <- list.files(recursive=T,pattern=paste0("^",pattern),full.names=TRUE)
d1<-data.frame()
for (i in count_files) {
f <- read.csv(i,row.names = 1)
f<- cbind(f,c(rep(unlist(strsplit(i,'/'))[2],nrow(f))))
colnames(f)[3]<-c('time_series')
#if the counts object is empty just copy the f to m
if(length(d1) == 0){
d1 <- f
} else
{
#if the dataframe is not empty then merge the data
d1 <- rbind(d1,f)
}
}
d1$time_series<-gsub("sim","",d1$time_series)
d1$time_series<-str_pad(d1$time_series, 2, pad = "0")
colnames(d1)<-c("Method","Median","Network")
return(d1)
}
pattern<-"Combined_data_sums_onlyAUC.csv"
d1<-create_rowsum_lineplot(pattern,methods)
pattern<-"Combined_data_sums_onlyAUC.csv"
d1<-create_rowsum_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=1</sub>, Weight<sub>ACC=0</sub> for Top 12 Methods across Networks")+scale_color_manual(values=pal)
ggplotly(p)
pattern<-"Combined_data_sums_onlyAUC.csv"
d1<-create_rowsum_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=1</sub>, Weight<sub>ACC=0</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#onlyAUC
pattern<-"Combined_data_sums_onlyAUC.csv"
d1<-create_rowsum_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=1</sub>, Weight<sub>ACC=0</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#onlyACC
pattern<-"Combined_data_sums_onlyACC.csv"
d1<-create_rowsum_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0</sub>, Weight<sub>ACC=1</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#equal weights
pattern<-"Combined_data_sums_equal.csv"
d1<-create_rowsum_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0.5</sub>, Weight<sub>ACC=0.5</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#AUC=0.3, ACC=0.7 weights
pattern<-"Combined_data_sums_37.csv"
d1<-create_rowsum_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0.3</sub>, Weight<sub>ACC=0.7</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#AUC=0.7, ACC=0.3 weights
pattern<-"Combined_data_sums_73.csv"
d1<-create_rowsum_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=`Row Sum`,group=Method,color=Method)) + geom_line() + ggtitle("Row Sums Weight<sub>AUC=0.7</sub>, Weight<sub>ACC=0.3</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#onlyAUC
pattern<-"Combined_data_median_onlyAUC.csv"
d1<-create_median_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=1</sub>, Weight<sub>ACC=0</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#onlyACC
pattern<-"Combined_data_median_onlyACC.csv"
d1<-create_median_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0</sub>, Weight<sub>ACC=1</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#equal weights
pattern<-"Combined_data_median_equal.csv"
d1<-create_median_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0.5</sub>, Weight<sub>ACC=0.5</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#AUC=0.3, ACC=0.7 weights
pattern<-"Combined_data_sums_37.csv"
d1<-create_median_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0.3</sub>, Weight<sub>ACC=0.7</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
#AUC=0.7, ACC=0.3 weights
pattern<-"Combined_data_sums_73.csv"
d1<-create_median_lineplot(pattern)
p<-ggplot(d1, aes(x=Network, y=Median,group=Method,color=Method)) + geom_line() + ggtitle("Medians Weight<sub>AUC=0.7</sub>, Weight<sub>ACC=0.3</sub> for Top 12 Methods across Networks")
ggplotly(p)
p1<-ggplotly(p)
knitr::opts_chunk$set(
echo = TRUE,
fig.show = "hold",
message = FALSE,
warning = FALSE
)
library(dplyr)
library(caret)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(heatmaply)
library(stringr)
?lhei
??lhei
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(dplyr)
library(caret)
library(ggplot2)
library(plotly)
library(RColorBrewer)
library(heatmaply)
library(stringr)
pal<-rev(c("#FF0000","#000000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,scale_fill_gradient = pal,show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#000000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,500),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,500),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,10000),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,100),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,1),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,.92),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,.97),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,.97),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,1.2),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,1),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,limits = c(0,.94),show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
pal<-rev(c("#FF0000","#000000","#031e33","#0b5394","#38761d","#ffe700","#FFFFFF"))
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Combined"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Row Sums Value across 28 Networks",file = "heatmap_rowsums.pdf",width=800,height=1000,margins = c(40, 50)) %>%
layout(height = 900)
patterns<-c("Combined_data_median_onlyAUC","Combined_data_median_onlyACC","Combined_data_median_equal","Combined_data_median_37","Combined_data_median_73")
count_files <- list.files(path="averages",recursive=TRUE,pattern=paste0("Average_Median"),full.names=TRUE)
d1<-data.frame()
for (i in count_files){
f<-read.csv(i,row.names = 1)
if(length(d1) == 0){
d1<-f
}
else{
d1<- merge(d1, f, by.x = "Method_name", by.y = "Method_name")
}
}
rownames(d1)<-d1$Method_name
colnames(d1)<-c("Method_name","AUC=0.3,ACC=0.7","AUC=0.7,ACC=0.3","AUC=0.5,ACC=0.5","AUC=0,ACC=1","AUC=1,ACC=0")
d1<- d1 %>% select(-Method_name)
heatmaply(d1,colors = pal,show_dendrogram = c(TRUE, FALSE),labCol=c("Weight<sub>AUC=0.3</sub>,Weight<sub>ACC=0.7</sub>","Weight<sub>AUC=0.7</sub>,Weight<sub>ACC=0.3</sub>","Weight<sub>AUC=0.5</sub>,Weight<sub>ACC=0.5</sub>","Weight<sub>AUC=0</sub>,Weight<sub>ACC=1</sub>","Weight<sub>AUC=1</sub>,Weight<sub>ACC=0</sub>"),main="Average Median Value across 28 Networks",file = "heatmap_medians.pdf",width=800,height=1000,margins = c(40, 50))  %>%
layout(height = 900)
